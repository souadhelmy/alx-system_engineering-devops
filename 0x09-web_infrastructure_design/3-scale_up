https://github.com/souadhelmy/alx-system_engineering-devops/blob/master/0x09-web_infrastructure_design/3-scale_up.jpg



The specifics of this infrastructure:

Load Balancer Cluster: A cluster of load balancers is added to distribute incoming traffic across multiple servers. 
The load balancer cluster ensures high availability and improves the scalability and fault tolerance of the infrastructure.

Server: One additional server is added to the infrastructure. This server can be used to host any component based on its specific requirements,
such as a web server, an application server, or a database server.

HAproxy: Each server in the cluster is equipped with HAproxy, a load-balancing software.
HAproxy enables efficient distribution of incoming requests among the available servers, improving resource utilization and ensuring high availability.

Split Components: Each server is dedicated to hosting a specific component of the web infrastructure:

Web Server: One server is dedicated to hosting the web server component, such as Nginx. 
It handles incoming HTTP/HTTPS requests, serves static files, and performs any necessary web-related functions.

Application Server: Another server is dedicated to hosting the application server component.
It executes the codebase for dynamic content, processes user requests, and generates dynamic responses.

Database Server: The third server is dedicated to hosting the database server component, such as MySQL.
It stores and manages the website's data, handling write and read operations.

By splitting the components into separate servers, the infrastructure achieves better resource isolation, 
scalability, and fault tolerance. Each server can be optimized and scaled independently based on the specific requirements of its component.

The addition of the load balancer cluster enhances availability by distributing traffic across multiple servers,
reducing the risk of a single point of failure. It also allows for efficient utilization of server resources.

Please note that in this design, the specific configuration and settings of each component, such as the web server,
application server, and database server, are not specified.
These can be chosen based on the specific needs and technologies preferred for the website/application.

Overall, this infrastructure design with a load balancer cluster and split components provides a scalable,
fault-tolerant, and efficient setup for hosting the website.
